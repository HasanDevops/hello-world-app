name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm install

      - name: Build Docker image
        run: docker build -t hello-world-nodejs:latest .
      
      - name: Debug AWS Credentials
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AA_KEY_ID }}"
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.SA_KEY }}"
          echo "AWS_REGION=${{ secrets.A_REGION }}"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AA_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SA_KEY }}
          aws-region: us-west-2
          
          
      - name: Login to Amazon ECR
        id: login-ecr-private
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'
          registry-type: private
          skip-logout: 'false'
          region: us-west-2

      - name: Build, tag, and push Docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: hello-world-nodejs
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker tag hello-world-nodejs:latest ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}

  deploy:
    runs-on: ubuntu-22.04
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AA_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SA_KEY }}
          aws-region: ${{ secrets.A_region }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Initialize Terraform
        run: terraform init
        working-directory: ./terraform

      - name: Apply Terraform
        run: terraform apply -auto-approve
        working-directory: ./terraform
