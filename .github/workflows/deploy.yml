name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm install

      - name: Build Docker image
        run: docker build -t hello-world-nodejs:latest .

      name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: hello-world-nodejs
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t hello-world-nodejs .
          docker tag hello-world-nodejs:latest 115134429501.dkr.ecr.us-west-2.amazonaws.com/hello-world-nodejs:latest
          docker push 115134429501.dkr.ecr.us-west-2.amazonaws.com/hello-world-nodejs:latest
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Push Docker image to Amazon ECR
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          IMAGE_REPO_NAME: hello-world
        run: |
          docker build -t hello-world-nodejs .
          docker tag hello-world-nodejs:latest 115134429501.dkr.ecr.us-west-2.amazonaws.com/hello-world-nodejs:latest    
          docker push 115134429501.dkr.ecr.us-west-2.amazonaws.com/hello-world-nodejs:latest
  deploy:
    runs-on: ubuntu-22.04
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Initialize Terraform
        run: terraform init
        working-directory: ./terraform

      - name: Apply Terraform
        run: terraform apply -auto-approve
        working-directory: ./terraform
